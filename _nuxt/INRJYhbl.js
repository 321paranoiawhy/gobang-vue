import{d as f,r as u,c as w,o as x,a as m,b as k,u as _,_ as S,e as y}from"./DCigdFmj.js";const b=["width","height"],M=f({__name:"chessboard-canvas",setup(p){const h=u();let e;const n=u(14),l=u(14),v=u(100),o=w(()=>({width:(l.value+2)*v.value,height:(n.value+2)*v.value}));x(()=>{var a;e=(a=h.value)==null?void 0:a.getContext("2d"),e.lineJoin="miter",e.fillStyle="white",e.fillRect(0,0,o.value.width,o.value.height),e.translate(o.value.width/2,o.value.height/2),C({size:v.value,outerColor:"black",innerColor:"green"})});const C=a=>{const{size:s,outerColor:i,innerColor:d}=a;for(let t=0;t<=n.value;t++){[0,n.value].includes(t)?(e.lineWidth=2,e.strokeStyle=i):(e.lineWidth=1,e.strokeStyle=d),console.log(e.lineWidth);const c=s*(l.value/2),r=(t-n.value/2)*s;e.moveTo(-c,r),e.lineTo(c,r),e.stroke()}for(let t=0;t<=l.value;t++){[0,l.value].includes(t)?(e.lineWidth=2,e.strokeStyle=i):(e.lineWidth=1,e.strokeStyle=d);const c=(t-l.value/2)*s,r=s*(n.value/2);e.moveTo(c,-r),e.lineTo(c,r),e.stroke()}},g=a=>{const{offsetX:s,offsetY:i}=a;Math.abs(Math.round(s/o.value.width)),Math.abs(Math.round(i/o.value.height))};return(a,s)=>(m(),k("canvas",{ref_key:"canvasRef",ref:h,width:_(o).width,height:_(o).height,class:"block mx-auto",onClick:g},null,8,b))}}),W=S(M,[["__scopeId","data-v-12139cf3"]]),R=f({__name:"canvas-version",setup(p){return(h,e)=>(m(),k("div",null,[y(W)]))}});export{R as default};
